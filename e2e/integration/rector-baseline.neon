parameters:
	ignoreErrors:
		-
			message: "#^Calling PHPStan\\\\Dependency\\\\DependencyResolver\\:\\:resolveDependencies\\(\\) is not covered by backward compatibility promise\\. The method might change in a minor PHPStan version\\.$#"
			count: 1
			path: repo/packages/Caching/FileSystem/DependencyResolver.php

		-
			message: "#^Calling PHPStan\\\\File\\\\FileWriter\\:\\:write\\(\\) is not covered by backward compatibility promise\\. The method might change in a minor PHPStan version\\.$#"
			count: 1
			path: repo/packages/Caching/ValueObject/Storage/FileCacheStorage.php

		-
			message: "#^Calling PHPStan\\\\Type\\\\UnionTypeHelper\\:\\:sortTypes\\(\\) is not covered by backward compatibility promise\\. The method might change in a minor PHPStan version\\.$#"
			count: 1
			path: repo/packages/NodeTypeResolver/PHPStan/TypeHasher.php

		-
			message: "#^Calling PHPStan\\\\Reflection\\\\BetterReflection\\\\BetterReflectionSourceLocatorFactory\\:\\:create\\(\\) is not covered by backward compatibility promise\\. The method might change in a minor PHPStan version\\.$#"
			count: 1
			path: repo/packages/NodeTypeResolver/Reflection/BetterReflection/RectorBetterReflectionSourceLocatorFactory.php

		-
			message: "#^Creating new PHPStan\\\\Reflection\\\\BetterReflection\\\\SourceLocator\\\\OptimizedDirectorySourceLocator is not covered by backward compatibility promise\\. The class might change in a minor PHPStan version\\.$#"
			count: 1
			path: repo/packages/NodeTypeResolver/Reflection/BetterReflection/SourceLocatorProvider/DynamicSourceLocatorProvider.php

		-
			message: "#^Creating new PHPStan\\\\Reflection\\\\BetterReflection\\\\SourceLocator\\\\OptimizedSingleFileSourceLocator is not covered by backward compatibility promise\\. The class might change in a minor PHPStan version\\.$#"
			count: 1
			path: repo/packages/NodeTypeResolver/Reflection/BetterReflection/SourceLocatorProvider/DynamicSourceLocatorProvider.php

		-
			message: "#^Calling PHPStan\\\\Reflection\\\\Native\\\\NativeFunctionReflection\\:\\:getName\\(\\) is not covered by backward compatibility promise\\. The method might change in a minor PHPStan version\\.$#"
			count: 1
			path: repo/packages/ReadWrite/Guard/VariableToConstantGuard.php

		-
			message: "#^Creating new PHPStan\\\\Php\\\\PhpVersion is not covered by backward compatibility promise\\. The class might change in a minor PHPStan version\\.$#"
			count: 2
			path: repo/packages/VersionBonding/Application/MissedRectorDueVersionChecker.php

		-
			message: "#^Calling PHPStan\\\\Reflection\\\\Php\\\\PhpFunctionReflection\\:\\:getFileName\\(\\) is not covered by backward compatibility promise\\. The method might change in a minor PHPStan version\\.$#"
			count: 1
			path: repo/rules/CodingStyle/Reflection/VendorLocationDetector.php

		-
			message: "#^Creating new PHPStan\\\\Reflection\\\\Php\\\\PhpParameterReflection is not covered by backward compatibility promise\\. The class might change in a minor PHPStan version\\.$#"
			count: 1
			path: repo/rules/DowngradePhp80/NodeAnalyzer/NamedToUnnamedArgs.php

		-
			message: "#^Calling PHPStan\\\\Reflection\\\\Native\\\\NativeFunctionReflection\\:\\:getName\\(\\) is not covered by backward compatibility promise\\. The method might change in a minor PHPStan version\\.$#"
			count: 1
			path: repo/rules/DowngradePhp80/NodeAnalyzer/UnnamedArgumentResolver.php

		-
			message: "#^Parameter \\#1 \\$separator of function explode expects non\\-empty\\-string, string given\\.$#"
			count: 2
			path: repo/rules/PSR4/FileRelocationResolver.php

		-
			message: "#^Calling PHPStan\\\\Analyser\\\\MutatingScope\\:\\:assignExpression\\(\\) is not covered by backward compatibility promise\\. The method might change in a minor PHPStan version\\.$#"
			count: 1
			path: repo/rules/Php70/Rector/FuncCall/NonVariableToVariableOnFunctionCallRector.php

		-
			message: "#^Parameter \\#2 \\$length of function str_split expects int\\<1, max\\>, int given\\.$#"
			count: 1
			path: repo/rules/Php74/Rector/LNumber/AddLiteralSeparatorToNumberRector.php

		-
			message: "#^Parameter \\#1 \\$separator of function explode expects non\\-empty\\-string, string given\\.$#"
			count: 1
			path: repo/rules/Privatization/Rector/Class_/RepeatedLiteralToClassConstantRector.php

		-
			message: "#^Creating new PHPStan\\\\Reflection\\\\Native\\\\NativeFunctionReflection is not covered by backward compatibility promise\\. The class might change in a minor PHPStan version\\.$#"
			count: 1
			path: repo/src/PHPStan/Reflection/TypeToCallReflectionResolver/ClosureTypeToCallReflectionResolver.php

		-
			message: "#^Calling PHPStan\\\\Reflection\\\\Php\\\\PhpFunctionReflection\\:\\:getFileName\\(\\) is not covered by backward compatibility promise\\. The method might change in a minor PHPStan version\\.$#"
			count: 1
			path: repo/src/PhpParser/AstResolver.php

		-
			message: "#^Calling PHPStan\\\\Reflection\\\\Php\\\\PhpFunctionReflection\\:\\:getName\\(\\) is not covered by backward compatibility promise\\. The method might change in a minor PHPStan version\\.$#"
			count: 6
			path: repo/src/PhpParser/AstResolver.php

