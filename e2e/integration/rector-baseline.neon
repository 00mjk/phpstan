parameters:
	ignoreErrors:
		-
			message: "#^Argument of an invalid type PHPStan\\\\Dependency\\\\NodeDependencies supplied for foreach, only iterables are supported\\.$#"
			count: 1
			path: repo/packages/Caching/FileSystem/DependencyResolver.php

		-
			message: "#^Calling PHPStan\\\\Dependency\\\\DependencyResolver\\:\\:resolveDependencies\\(\\) is not covered by backward compatibility promise\\. The method might change in a minor PHPStan version\\.$#"
			count: 1
			path: repo/packages/Caching/FileSystem/DependencyResolver.php

		-
			message: "#^Calling PHPStan\\\\File\\\\FileWriter\\:\\:write\\(\\) is not covered by backward compatibility promise\\. The method might change in a minor PHPStan version\\.$#"
			count: 1
			path: repo/packages/Caching/ValueObject/Storage/FileCacheStorage.php

		-
			message: "#^Parameter \\#1 \\$classReflection of class PHPStan\\\\Type\\\\ThisType constructor expects PHPStan\\\\Reflection\\\\ClassReflection, string given\\.$#"
			count: 1
			path: repo/packages/NodeTypeResolver/PHPStan/Type/TypeFactory.php

		-
			message: "#^Calling PHPStan\\\\Type\\\\UnionTypeHelper\\:\\:sortTypes\\(\\) is not covered by backward compatibility promise\\. The method might change in a minor PHPStan version\\.$#"
			count: 1
			path: repo/packages/NodeTypeResolver/PHPStan/TypeHasher.php

		-
			message: "#^Calling PHPStan\\\\Reflection\\\\BetterReflection\\\\BetterReflectionSourceLocatorFactory\\:\\:create\\(\\) is not covered by backward compatibility promise\\. The method might change in a minor PHPStan version\\.$#"
			count: 1
			path: repo/packages/NodeTypeResolver/Reflection/BetterReflection/RectorBetterReflectionSourceLocatorFactory.php

		-
			message: "#^Creating new PHPStan\\\\Reflection\\\\BetterReflection\\\\SourceLocator\\\\OptimizedDirectorySourceLocator is not covered by backward compatibility promise\\. The class might change in a minor PHPStan version\\.$#"
			count: 1
			path: repo/packages/NodeTypeResolver/Reflection/BetterReflection/SourceLocatorProvider/DynamicSourceLocatorProvider.php

		-
			message: "#^Creating new PHPStan\\\\Reflection\\\\BetterReflection\\\\SourceLocator\\\\OptimizedSingleFileSourceLocator is not covered by backward compatibility promise\\. The class might change in a minor PHPStan version\\.$#"
			count: 1
			path: repo/packages/NodeTypeResolver/Reflection/BetterReflection/SourceLocatorProvider/DynamicSourceLocatorProvider.php

		-
			message: "#^Calling PHPStan\\\\Reflection\\\\Native\\\\NativeFunctionReflection\\:\\:getName\\(\\) is not covered by backward compatibility promise\\. The method might change in a minor PHPStan version\\.$#"
			count: 1
			path: repo/packages/ReadWrite/Guard/VariableToConstantGuard.php

		-
			message: "#^Parameter \\#1 \\$classReflection of class PHPStan\\\\Type\\\\StaticType constructor expects PHPStan\\\\Reflection\\\\ClassReflection, string given\\.$#"
			count: 1
			path: repo/packages/StaticTypeMapper/PhpDocParser/IdentifierTypeMapper.php

		-
			message: "#^Parameter \\#1 \\$classReflection of class Rector\\\\StaticTypeMapper\\\\ValueObject\\\\Type\\\\ParentStaticType constructor expects PHPStan\\\\Reflection\\\\ClassReflection, string given\\.$#"
			count: 1
			path: repo/packages/StaticTypeMapper/PhpDocParser/IdentifierTypeMapper.php

		-
			message: "#^Creating new PHPStan\\\\Php\\\\PhpVersion is not covered by backward compatibility promise\\. The class might change in a minor PHPStan version\\.$#"
			count: 2
			path: repo/packages/VersionBonding/Application/MissedRectorDueVersionChecker.php

		-
			message: "#^Method Rector\\\\CodeQuality\\\\Rector\\\\Assign\\\\CombinedAssignRector\\:\\:refactor\\(\\) should return PhpParser\\\\Node\\|null but returns object\\.$#"
			count: 1
			path: repo/rules/CodeQuality/Rector/Assign/CombinedAssignRector.php

		-
			message: "#^Method Rector\\\\CodeQuality\\\\Rector\\\\Identical\\\\SimplifyConditionsRector\\:\\:createInversedBooleanOp\\(\\) should return PhpParser\\\\Node\\\\Expr\\\\BinaryOp\\|null but returns object\\.$#"
			count: 1
			path: repo/rules/CodeQuality/Rector/Identical/SimplifyConditionsRector.php

		-
			message: "#^Property PhpParser\\\\Node\\\\Stmt\\\\Return_\\:\\:\\$expr \\(PhpParser\\\\Node\\\\Expr\\|null\\) does not accept object\\.$#"
			count: 1
			path: repo/rules/CodeQuality/Rector/Return_/SimplifyUselessVariableRector.php

		-
			message: "#^Method Rector\\\\CodeQuality\\\\Rector\\\\Ternary\\\\UnnecessaryTernaryExpressionRector\\:\\:refactor\\(\\) should return PhpParser\\\\Node\\|null but returns object\\.$#"
			count: 1
			path: repo/rules/CodeQuality/Rector/Ternary/UnnecessaryTernaryExpressionRector.php

		-
			message: "#^Calling PHPStan\\\\Reflection\\\\Php\\\\PhpFunctionReflection\\:\\:getFileName\\(\\) is not covered by backward compatibility promise\\. The method might change in a minor PHPStan version\\.$#"
			count: 1
			path: repo/rules/CodingStyle/Reflection/VendorLocationDetector.php

		-
			message: "#^Parameter \\#1 \\$callback of function array_map expects callable\\(PhpParser\\\\Node\\\\Expr\\\\ArrayItem\\|null\\)\\: mixed, Closure\\(PhpParser\\\\Node\\\\Expr\\\\ArrayItem\\)\\: PhpParser\\\\Node\\\\Arg given\\.$#"
			count: 1
			path: repo/rules/DowngradePhp74/Rector/Array_/DowngradeArraySpreadRector.php

		-
			message: "#^Creating new PHPStan\\\\Reflection\\\\Php\\\\PhpParameterReflection is not covered by backward compatibility promise\\. The class might change in a minor PHPStan version\\.$#"
			count: 1
			path: repo/rules/DowngradePhp80/NodeAnalyzer/NamedToUnnamedArgs.php

		-
			message: "#^Calling PHPStan\\\\Reflection\\\\Native\\\\NativeFunctionReflection\\:\\:getName\\(\\) is not covered by backward compatibility promise\\. The method might change in a minor PHPStan version\\.$#"
			count: 1
			path: repo/rules/DowngradePhp80/NodeAnalyzer/UnnamedArgumentResolver.php

		-
			message: "#^Parameter \\#1 \\$classReflection of class PHPStan\\\\Type\\\\StaticType constructor expects PHPStan\\\\Reflection\\\\ClassReflection, class\\-string given\\.$#"
			count: 1
			path: repo/rules/DowngradePhp80/Rector/ClassMethod/DowngradeStaticTypeDeclarationRector.php

		-
			message: "#^Calling PHPStan\\\\Analyser\\\\MutatingScope\\:\\:assignExpression\\(\\) is not covered by backward compatibility promise\\. The method might change in a minor PHPStan version\\.$#"
			count: 1
			path: repo/rules/Php70/Rector/FuncCall/NonVariableToVariableOnFunctionCallRector.php

		-
			message: "#^Call to an undefined method PHPStan\\\\Reflection\\\\ClassReflection\\:\\:getNativeMethods\\(\\)\\.$#"
			count: 1
			path: repo/rules/Transform/NodeTypeAnalyzer/TypeProvidingExprFromClassResolver.php

		-
			message: "#^Unable to resolve the template type T in call to method static method PHPStan\\\\Reflection\\\\ParametersAcceptorSelector\\:\\:selectSingle\\(\\)$#"
			count: 1
			path: repo/rules/Transform/NodeTypeAnalyzer/TypeProvidingExprFromClassResolver.php

		-
			message: "#^Parameter \\#1 \\$classReflection of class PHPStan\\\\Type\\\\ThisType constructor expects PHPStan\\\\Reflection\\\\ClassReflection, string given\\.$#"
			count: 2
			path: repo/rules/TypeDeclaration/TypeInferer/ReturnTypeInferer.php

		-
			message: "#^Method Rector\\\\Core\\\\NodeManipulator\\\\BinaryOpManipulator\\:\\:inverseBinaryOp\\(\\) should return PhpParser\\\\Node\\\\Expr\\\\BinaryOp\\|null but returns object\\.$#"
			count: 1
			path: repo/src/NodeManipulator/BinaryOpManipulator.php

		-
			message: "#^Method Rector\\\\Core\\\\NodeManipulator\\\\BinaryOpManipulator\\:\\:inverseNode\\(\\) should return PhpParser\\\\Node but returns object\\.$#"
			count: 1
			path: repo/src/NodeManipulator/BinaryOpManipulator.php

		-
			message: "#^Method Rector\\\\Core\\\\NodeManipulator\\\\BinaryOpManipulator\\:\\:invertCondition\\(\\) should return PhpParser\\\\Node\\\\Expr\\\\BinaryOp\\|null but returns object\\.$#"
			count: 1
			path: repo/src/NodeManipulator/BinaryOpManipulator.php

		-
			message: "#^Creating new PHPStan\\\\Reflection\\\\Native\\\\NativeFunctionReflection is not covered by backward compatibility promise\\. The class might change in a minor PHPStan version\\.$#"
			count: 1
			path: repo/src/PHPStan/Reflection/TypeToCallReflectionResolver/ClosureTypeToCallReflectionResolver.php

		-
			message: "#^Calling PHPStan\\\\Reflection\\\\Php\\\\PhpFunctionReflection\\:\\:getFileName\\(\\) is not covered by backward compatibility promise\\. The method might change in a minor PHPStan version\\.$#"
			count: 1
			path: repo/src/PhpParser/AstResolver.php

		-
			message: "#^Calling PHPStan\\\\Reflection\\\\Php\\\\PhpFunctionReflection\\:\\:getName\\(\\) is not covered by backward compatibility promise\\. The method might change in a minor PHPStan version\\.$#"
			count: 6
			path: repo/src/PhpParser/AstResolver.php

